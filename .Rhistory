p[["X1"]][i,j] = 0
}
}
}
class(p) <- c("THsegments", class(p))
return(p)
}
c <- segmentation_threshold(tif)
pic <- read_stars(system.file("extdata/image.tif", package="ImageSegmentation"))
g = RGBtoGRAY(pic,3,1,2,3)
c <- segmentation_threshold(g)
extract(c,2)
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg[1])[1]){
for (j in 1:dim(segimg[1])[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] == 0
}
else segimg[["X1"]][i,j] == segimg[["X1"]][i,j]
}
}
plot(segimg, col = sf.colors(2) , main = NULL)
}
extract(c,2)
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg[1])[1]){
for (j in 1:dim(segimg[1])[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] == 0
}
else segimg[["X1"]][i,j] == cluster
}
}
plot(segimg, col = sf.colors(2) , main = NULL)
}
extract(c,2)
extract(c,1)
segmentation_threshold = function(p,val1=mean,val2= 0.5*mean,val3=0.25*mean){
mean = mean(p[["X1"]])
for (i in 1:dim(p)[1]){
for (j in 1:dim(p)[2]){
if (p[["X1"]][i,j] > val1){
p[["X1"]][i,j]= 4
}
else if (p[["X1"]][i,j] > val2){
p[["X1"]][i,j]= 3
}
else if (p[["X1"]][i,j] > val3){
p[["X1"]][i,j]= 2
}
else{
p[["X1"]][i,j] = 1
}
}
}
class(p) <- c("THsegments", class(p))
return(p)
}
g <- segmentation_threshold(pic)
h <- segmentation_threshold(g)
imageplot <- function(obj, ...,k=NULL, org_image=NULL, b=NULL, col= NULL ) {
UseMethod("imageplot")
}
imageplot.THsegments <- function(obj, ..., col = sf.colors(4)) {
plot(obj, ..., col = col , main = NULL)
}
imageplot(h)
extract(h,2)
g
dim(g[1])
dim(g[1])[1]
g[["X1"]][1,1]
segmentation_threshold = function(p,val1=mean,val2= 0.5*mean,val3=0.25*mean){
mean = mean(p[["X1"]])
for (i in 1:dim(p)[1]){
for (j in 1:dim(p)[2]){
if (p[["X1"]][i,j] > val1){
p[["X1"]][i,j]= 4
}
else if (p[["X1"]][i,j] > val2){
p[["X1"]][i,j]= 3
}
else if (p[["X1"]][i,j] > val3){
p[["X1"]][i,j]= 2
}
else{
p[["X1"]][i,j] = 1
}
}
}
class(p[["X1"]]) <- c("THsegments", class(p))
return(p[["X1"]])
}
h <- segmentation_threshold(g)
h
g[1,1]
pic <- read_stars(system.file("extdata/image.tif", package="ImageSegmentation"))
g = RGBtoGRAY(pic,3,1,2,3)
h <- segmentation_threshold(g)
h
segmentation_threshold = function(p,val1=mean,val2= 0.5*mean,val3=0.25*mean){
mean = mean(p[["X1"]])
for (i in 1:dim(p)[1]){
for (j in 1:dim(p)[2]){
if (p[["X1"]][i,j] > val1){
p[["X1"]][i,j]= 4
}
else if (p[["X1"]][i,j] > val2){
p[["X1"]][i,j]= 3
}
else if (p[["X1"]][i,j] > val3){
p[["X1"]][i,j]= 2
}
else{
p[["X1"]][i,j] = 1
}
}
}
class(p) <- c("THsegments", class(p))
return(p)
}
h <- segmentation_threshold(g)
h
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg[1])[1]){
for (j in 1:dim(segimg[1])[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] == 0
}
else segimg[["X1"]][i,j] == cluster
}
}
plot(segimg, col = sf.colors(2) , main = NULL)
}
extract(h,2)
extract(h,4)
h[["X1"]][1,1]
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] == 0
}
else segimg$cluster[i] == segimg$cluster[i]
}
obj_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= obj_matrix[i,j]
}
}
plot(s[1], col = sf.colors(2), main = NULL)
}
library(stars)
tif <- read_stars(system.file("extdata/image.tif", package="ImageSegmentation"))
p <- seg_kmeans(tif,3,5)
p
seg_kmeans = function(im, b=3, k=5){
s <- split(im,b)
df <- as.data.frame(s, wide="X")
k <- kmeans(df,k)
t <- cbind(df, cluster = k$cluster)
keeps <- c("x", "y", "cluster")
h <- t[keeps]
class(h) <- c("Table", class(df))
return(h)
}
j <- seg_kmeans(tif)
extract <- function(segimg, ..., cluster=NULL, org_image=NULL, b=NULL) {
UseMethod("extract")
}
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] == 0
}
else segimg$cluster[i] == segimg$cluster[i]
}
obj_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= obj_matrix[i,j]
}
}
plot(s[1], col = sf.colors(2), main = NULL)
}
extract(j, cluster = )
extract(j, cluster = 4, org_image = tif, b=3)
segmentation_threshold = function(p,val1=mean,val2= 0.5*mean,val3=0.25*mean){
mean = mean(p[["X1"]])
for (i in 1:dim(p)[1]){
for (j in 1:dim(p)[2]){
if (p[["X1"]][i,j] > val1){
p[["X1"]][i,j]= 4
}
else if (p[["X1"]][i,j] > val2){
p[["X1"]][i,j]= 3
}
else if (p[["X1"]][i,j] > val3){
p[["X1"]][i,j]= 2
}
else{
p[["X1"]][i,j] = 1
}
}
}
class(p) <- c("THsegments", class(p))
return(p)
}
pic <- read_stars(system.file("extdata/image.tif", package="ImageSegmentation"))
g <- RGBtoGRAY(pic,3,1,2,3)
s <- segmentation_threshold(g)
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg[1])[1]){
for (j in 1:dim(segimg[1])[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] == 0
}
else segimg[["X1"]][i,j] == cluster
}
}
plot(segimg, col = sf.colors(2) , main = NULL)
}
extract(s,4)
s
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg[1])[1]){
for (j in 1:dim(segimg[1])[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] == 0
}
else segimg[["X1"]][i,j] == cluster
}
}
plot(segimg[1], col = sf.colors(2) , main = NULL)
}
extract(s,4)
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg)[1]){
for (j in 1:dim(segimg)[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] == 0
}
else segimg[["X1"]][i,j] == cluster
}
}
plot(segimg, col = sf.colors(2) , main = NULL)
}
extract(s,4)
s[1]
dim(s)[1]
s[["X1"]][1,2]
extract(s, cluster= 4)
class(s)
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg)[1]){
for (j in 1:dim(segimg)[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] == 0
}
else segimg[["X1"]][i,j] == cluster
}
}
plot(segimg, col = sf.colors(2) , main = NULL)
}
extract(s, cluster= 4)
s
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg)[1]){
for (j in 1:dim(segimg)[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] == 0
}
else segimg[["X1"]][i,j] == segimg[["X1"]][i,j]
}
}
plot(segimg, col = sf.colors(2) , main = NULL)
}
extract(s, cluster= 4)
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg)[1]){
for (j in 1:dim(segimg)[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] == 0
}
else segimg[["X1"]][i,j] == 1
}
}
plot(segimg, col = sf.colors(2) , main = NULL)
}
extract(s, cluster= 4)
s
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg)[1]){
for (j in 1:dim(segimg)[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] = 0
}
else segimg[["X1"]][i,j] = cluster
}
}
plot(segimg, col = sf.colors(2) , main = NULL)
}
extract(s, cluster= 4)
View(j)
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] = 0
}
else segimg$cluster[i] = segimg$cluster[i]
}
obj_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= obj_matrix[i,j]
}
}
plot(s[1], col = sf.colors(2), main = NULL)
}
extract(j, cluster = 4, org_image = tif, b=3)
?plot.stars
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] == 0
}
else segimg$cluster[i] == segimg$cluster[i]
}
obj_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= obj_matrix[i,j]
}
}
plot(s[1], col = sf.colors(2), main = NULL, breaks = "equal")
}
extract(j, cluster = 4, org_image = tif, b=3)
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] == 0
}
else segimg$cluster[i] == segimg$cluster[i]
}
obj_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= obj_matrix[i,j]
}
}
plot(s[1], col = sf.colors(2), main = NULL, nbreaks = 2)
}
extract(j, cluster = 4, org_image = tif, b=3)
library(ImageSegmentation)
?extract
?save.image
x <- "C:/Users/bcham/Documents/Geo_Spatial_Master/Data_Science_R/final project/ImageSegmentation/inst/extdata/image.tif"
x
x <- load("C:/Users/bcham/Documents/Geo_Spatial_Master/Data_Science_R/final project/ImageSegmentation/inst/extdata/image.tif")
?split
?kmeans
?plot
?sf.colours
?sf.colors
# Load the package
#library(ImageSegmentation)
# Load stars package to read data
#library(stars)
# Load the data from system files
imgRGB <- read_stars(system.file("extdata/image.tif", package="ImageSegmentation"))
library(ImageSegmentation)
?ImageSegmentation
vignette()
library(stars)
tif <- read_stars(system.file("extdata/image.tif", package="ImageSegmentation"))
p <- seg_kmeans(tif,3,5)
imageplot(p,5,tif,3)
?plot.stars
extract.THsegments <- function(segimg, ..., cluster= 1) {
for (i in 1:dim(segimg)[1]){
for (j in 1:dim(segimg)[2]){
if (segimg[["X1"]][i,j] != cluster) {
segimg[["X1"]][i,j] = 0
}
else segimg[["X1"]][i,j] = cluster
}
}
plot(segimg, col = c("red", "black") , main = NULL)
}
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] == 0
}
else segimg$cluster[i] == segimg$cluster[i]
}
segimg_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= segimg_matrix[i,j]
}
}
plot(s[1], col = c("red", "black"), main = NULL)
}
x <- extract.Table(p, cluster = 4, org_image = tif, b=3)
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] == 0
}
else segimg$cluster[i] == segimg$cluster[i]
}
segimg_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= segimg_matrix[i,j]
}
}
plot(s[1], col = sf.colors(2), main = NULL, breaks = "unique")
}
x <- extract.Table(p, cluster = 4, org_image = tif, b=3)
imageplot.Table <- function(obj, k=NULL, org_image=NULL, b=NULL,...) {
obj_matrix <- matrix(obj$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= obj_matrix[i,j]
}
}
plot(s[1], col = sf.colors(k), main = NULL)
}
library(stars)
imgRGB <- read_stars("C:/Users/bcham/Documents/Geo_Spatial_Master/Data_Science_R/final project/ImageSegmentation/inst/extdata/image.tif")
p <- seg_kmeans(imgRGB,3,5)
imageplot(p,5,imgRGB,3)
library(ImageSegmentation)
?seg_kmeans
library(stars)
tif <- read_stars("C:\Users\bcham\Documents\Geo_Spatial_Master\Data_Science_R\final project\data\image.tif")
tif <- read_stars("C:/Users/bcham/Documents/Geo_Spatial_Master/Data_Science_R/final project/data/image.tif")
j <- seg_kmeans(tif)
?imageplot
imageplot(j,5,tif,3)
library(ImageSegmentation)
install.packages("~/Geo_Spatial_Master/Data_Science_R/final project/ImageSegmentation_0.1.0.tar.gz", repos = NULL, type = "source")
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] == 0
}
else segimg$cluster[i] == segimg$cluster[i]
}
segimg_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= segimg_matrix[i,j]
}
}
plot(s[1], col = sf.colors(2), breaks = FALSE, main = NULL)
}
extract.Table(j, cluster = 1, org_image = tif, b= 3)
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] == 0
}
else segimg$cluster[i] == segimg$cluster[i]
}
segimg_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= segimg_matrix[i,j]
}
}
plot(s[1], col = sf.colors(2), key.pos = FALSE, main = NULL)
}
extract.Table(j, cluster = 1, org_image = tif, b= 3)
extract.Table <- function(segimg, cluster= 1,org_image=NULL, b=NULL,...) {
for (i in 1:length(segimg$cluster)){
if (segimg$cluster[i] != cluster) {
segimg$cluster[i] == 0
}
else segimg$cluster[i] == segimg$cluster[i]
}
segimg_matrix <- matrix(segimg$cluster, nrow = dim(org_image)[1], ncol = dim(org_image)[2])
s <- split(org_image,b)
for (i in 1:dim(s[1])[1]){
for (j in 1:dim(s[1])[2]){
s[["X1"]][i,j]= segimg_matrix[i,j]
}
}
plot(s[1], col = sf.colors(2), key.pos = NULL, main = NULL)
}
extract.Table(j, cluster = 1, org_image = tif, b= 3)
library(ImageSegmentation)
install.packages("~/Geo_Spatial_Master/Data_Science_R/final project/ImageSegmentation_0.1.0.tar.gz", repos = NULL, type = "source")
library(ImageSegmentation)
library(ImageSegmentation)
detach("package:ImageSegmentation", unload = TRUE)
library(ImageSegmentation)
remove.packages("ImageSegmentation", lib="~/R/win-library/3.6")
install.packages("~/Geo_Spatial_Master/Data_Science_R/final project/ImageSegmentation_0.1.0.tar.gz", repos = NULL, type = "source")
cd C:\Users\bcham\Documents\Geo_Spatial_Master\final project
